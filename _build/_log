### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules main.ml > main.ml.depends # cached
# Target: handlers/about.ml.depends, tags: { extension:ml, file:handlers/about.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules handlers/about.ml > handlers/about.ml.depends
# Target: handlers/index.ml.depends, tags: { extension:ml, file:handlers/index.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules handlers/index.ml > handlers/index.ml.depends # cached
# Target: handlers/index.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:handlers/index.cmo, file:handlers/index.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I handlers -o handlers/index.cmo handlers/index.ml # cached
# Target: server.ml.depends, tags: { extension:ml, file:server.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules server.ml > server.ml.depends # cached
# Target: handler.ml.depends, tags: { extension:ml, file:handler.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules handler.ml > handler.ml.depends # cached
# Target: handler.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:handler.cmo, file:handler.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I handlers -o handler.cmo handler.ml # cached
# Target: utils.ml.depends, tags: { extension:ml, file:utils.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules utils.ml > utils.ml.depends # cached
# Target: utils.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:utils.cmo, file:utils.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I handlers -o utils.cmo utils.ml # cached
# Target: server.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:server.cmo, file:server.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I handlers -o server.cmo server.ml # cached
# Target: handlers/about.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:handlers/about.cmo, file:handlers/about.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I handlers -o handlers/about.cmo handlers/about.ml
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I handlers -o main.cmo main.ml # cached
# Target: handlers/index.cmx, tags: { compile, extension:cmx, extension:ml, file:handlers/index.cmx, file:handlers/index.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -I handlers -o handlers/index.cmx handlers/index.ml # cached
# Target: handler.cmx, tags: { compile, extension:cmx, extension:ml, file:handler.cmx, file:handler.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -I handlers -o handler.cmx handler.ml # cached
# Target: utils.cmx, tags: { compile, extension:cmx, extension:ml, file:utils.cmx, file:utils.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -I handlers -o utils.cmx utils.ml # cached
# Target: server.cmx, tags: { compile, extension:cmx, extension:ml, file:server.cmx, file:server.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -I handlers -o server.cmx server.ml # cached
# Target: handlers/about.cmx, tags: { compile, extension:cmx, extension:ml, file:handlers/about.cmx, file:handlers/about.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -I handlers -o handlers/about.cmx handlers/about.ml
# Target: main.cmx, tags: { compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet }
/usr/local/bin/ocamlopt.opt -c -I handlers -o main.cmx main.ml
# Target: main.native, tags: { dont_link_with, extension:native, file:main.native, link, native, ocaml, program, quiet }
/usr/local/bin/ocamlopt.opt unix.cmxa str.cmxa handler.cmx handlers/about.cmx handlers/index.cmx utils.cmx server.cmx main.cmx -o main.native
# Compilation successful.
